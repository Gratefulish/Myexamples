#include <stdio.h>


/* 
2진법 - 0과 1로 구성

100110 = 1*2^5 + 1*2^2 + 1*2^1 = 38 한자릿수가 늘어날때마다 두배씩 늘어남


int - 32비트 

5를 저장할때, 

5 = 1*2^2+1 = 101(2진법)

00000000 00000000 00000000 00000101

37을 저장할 때,

37 = 1*2^5 + 1*2^2 + 1*2^0 = 100101
       32       4       1

00000000 00000000 00000000 00100101 


+) 153 을 저장할 때, 

00000000 00000000 00000000 10011001

153 = 1*2^7 + 1*2^4 + 1*2^3 1 = 10011001


8비트 = 1바이트 (1 bit = 1 byte)

바이트 - 컴퓨터에서 데이터를 처리하는 가장 작은 단위


자료형 - 정수형, 실수형 


정수형 

	char (1바이트) - 문자를 담는 데 쓰임.
	short (2바이트) 
	long  (4바이트)
	long long (8바이트)
	int (시스템에 따라서 자동결정, 요즘은 대체로 long)


실수형 

	float (4바이트)
	double (8바이트) 


	unsigned, signed 

	00000000 00000000 00000000 10011001
	첫번째 자리는 양수 음수 부호) 를 정함. 양수 - 0 음수 - 1

	11111111 11111111 11111111 11111111 = -1

	unsigned 는 부호를 무시한다. 

	선언을 할 때, 

	부호없는 정수를 선언 하고 싶을 때. 

	unsigned int a; = -값을 저장하지 않는다.

	unsigned double f; = " 

	void: 리턴값이 없는 함수의 자료형

	bool: 참, 거짓을 저장 (= char) - 별로 안씀.


*/ 

int main() {
	



}
